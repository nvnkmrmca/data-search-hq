{"version":3,"sources":["store/action-types.ts","store/reducers/historical-data-list.ts","store/reducers/state.ts","store/app-store.ts","components/common/elements.tsx","components/home/header.tsx","components/home/footer.tsx","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/historical-data.ts","components/common/spinner.tsx","components/common/data-table.tsx","components/common/card.tsx","containers/dashboard.tsx","components/home/dashboard.tsx","components/not-found/index.tsx","containers/home.tsx","components/home/index.tsx","containers/app-container.tsx","components/app-container.tsx","serviceWorker.js","index.tsx","App.tsx"],"names":["actionTypes","handleResult","state","payload","_objectSpread","data","isUpToDate","isError","errorMessage","State","combineReducers","HistoricalDataList","arguments","length","undefined","page","size","totalCount","action","type","LOAD_HISTORICALDATALIST","RESET","store","createStore","compose","applyMiddleware","reduxThunk","View","styled","div","_templateObject","TextInput","_templateObject2","img","_templateObject3","input","_templateObject4","Text","textarea","_templateObject5","select","_templateObject6","label","_templateObject7","header","span","_templateObject8","react","className","footer","COLOR","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","_ex","_funName","console","log","Api","url","API_BASE_PATH","get","callback","_this","fetch","post","delete","patch","put","getAS","_callee","key","regenerator_default","a","wrap","_context","prev","next","sessionStorage","getItem","abrupt","sent","t0","stop","_callee2","method","token","userId","_context2","headers","Accept","Content-Type","x-access-token","user-id","body","then","response","json","message","catch","error","toString","getsearchResult","spinner","props","visible","style","color","fontWeight","marginTop","text","data_table","react_default","createElement","columns","map","column","name","customHeader","row","i","keyName","custom","colSpan","gr_index_esm","title","onClick","onPageChange","Object","toConsumableArray","Array","Math","ceil","d","card","borderBottom","borderTop","marginBottom","padding","Dashboard","connect","ownProps","historicalDataList","dispatch","searchQuote","controller","result","search","quote","_useState","useState","_useState2","slicedToArray","searchText","setSearchText","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","hasDropDown","setHasDropDown","_useState7","_useState8","dropDownData","setDropDownData","_useState9","_useState10","viewType","setViewType","getColumns","Date","date","toLocaleDateString","placeholder","value","onFocus","onChange","e","target","zIndex","right","top","bs_index_esm","index_esm","not_found","flex","backgroundColor","Home","react_router","path","exact","component","CDashboard","NotFound","AppContainer","react_router_dom","Boolean","window","location","hostname","match","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb22fcd5.chunk.js","sourcesContent":["export enum actionTypes{\r\n    LOAD_HISTORICALDATALIST,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\nimport { IHistoricalDataList } from '../../models/store/historical-data-list';\n\nconst createEmptyResult = (): IHistoricalDataList => ({\n    data: {\n        data: [],\n        page: 0,\n        size: 20,\n        totalCount: 0\n      },\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const HistoricalDataList = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_HISTORICALDATALIST:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IHistoricalDataList, payload: IHistoricalDataList): IHistoricalDataList => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { HistoricalDataList } from './historical-data-list';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    HistoricalDataList: HistoricalDataList\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { State } from './reducers/state';\nimport { IAppState } from '../models/app-state';\n\nexport const store: Store<IAppState> = createStore(\n  State,\n  compose(\n    applyMiddleware(reduxThunk),\n  )\n);","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","import * as React from 'react';\r\nimport { Text } from '../common/elements';\r\n\r\nexport default () => {\r\n  return (\r\n    <header className='header d100'>\r\n      <Text className='bold'>Historical Data Search</Text>\r\n    </header>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"footer d100\">\r\n      <View className='center'>Footer</View>\r\n    </footer>\r\n  );\r\n};\r\n","// const API_BASE_PATH = 'http://localhost:3001/';\r\nconst API_BASE_PATH = 'https://data-search.herokuapp.com/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};\r\nexport const ROLE = {\r\n};","//import { config as apiConfig } from '../store/api/config';\n\nexport function parseJSON(response: any) {\n     return response.json()\n};\n\nexport function isNN(_input: any) { \n  return (isNNObject(_input) && _input.length > 0) \n};\n\nexport function isNNObject(_input: any) { \n  return (_input !== null && _input !== undefined) \n};\n\nexport function str2Json(_input: string) { \n  try {\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \n  } catch (ex) { \n    jsError(ex, \"String2JSON\"); \n    return {}; \n  } \n};\n\nexport function json2Str(_input: any) { \n  try {\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\n  } catch (ex) { \n    jsError(ex, \"JSON2String\"); \n    return \"\"; \n  }\n};\n\nexport function jsError(_ex: any, _funName: string) {\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \n   console.log(\"Error:\" + _funName + \":\" + _ex);\n};","import { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n};","import { actionTypes } from '../action-types';\r\nimport { IHistoricalDataList } from '../../models/store/historical-data-list';\r\nimport { IHistoricalData } from '../../models/historical-data';\r\nimport Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\n\r\nlet controller: string = 'search';\r\n\r\nexport const searchQuote = (text: string, callback: (result: Array<string>) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/quote/' + text, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      callback(result.data);\r\n    } else {\r\n      callback([]);\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (quote: string, page: number, size: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getsearchResult({\r\n    data: [],\r\n    page: 0,\r\n    size: 20,\r\n    totalCount: 0\r\n  }, false, false, ''));\r\n  new Api().get(controller + '/' + quote + '/' + page + '/' + size, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getsearchResult({\r\n        data: result.data.data,\r\n        page,\r\n        size,\r\n        totalCount: result.data.totalCount\r\n      }, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getsearchResult = (data: {\r\n  data: Array<IHistoricalData>;\r\n  page: number;\r\n  size: number;\r\n  totalCount: number;\r\n}, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HISTORICALDATALIST,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHistoricalDataList\r\n});","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    props.visible ?\r\n    <View>\r\n      <View className='loader-overlay'></View>\r\n      <View className='loader'>\r\n        <Text>...</Text>\r\n        <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{props.text}</View>\r\n      </View>\r\n    </View>\r\n    :\r\n    null\r\n  );\r\n}","import React from 'react';\r\nimport { GrPrevious, GrNext } from 'react-icons/gr';\r\n\r\ninterface IProps {\r\n  keyName: string,\r\n  columns: Array<any>,\r\n  data: {\r\n    data: Array<any>,\r\n    page: number,\r\n    size: number,\r\n    totalCount: number\r\n  }\r\n  className: string,\r\n  onPageChange: (page: number, size: number) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          {props.columns &&\r\n            props.columns.map(column => {\r\n              return (\r\n                <th\r\n                  key={'th' + (column.key ? column.key : column.name)}\r\n                  className=\"\"\r\n                >\r\n                  {column.customHeader\r\n                    ? column.customHeader(column)\r\n                    : column.name}\r\n                </th>\r\n              );\r\n            })}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.data.data && props.data.data.length > 0 ? (\r\n          props.data.data.map((row, i) => {\r\n            return (\r\n              <tr key={i + props.keyName}>\r\n                {props.columns &&\r\n                  props.columns.map(column => {\r\n                    return (\r\n                      <td\r\n                        key={i + 'td' + (column.key ? column.key : column.name)}\r\n                        className=''\r\n                      >\r\n                        {column.custom ? column.custom(row) : row[column.key]}\r\n                      </td>\r\n                    );\r\n                  })}\r\n              </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr>\r\n            <td colSpan={props.columns.length}>No data found!!!</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n      {props.data.data && props.data.data.length > 0 && (\r\n        <tfoot>\r\n          <tr>\r\n            <td colSpan={props.columns ? props.columns.length : 0}>\r\n              <div className=\"d-ib\">\r\n                {'Showing ' +\r\n                  (props.data.page * props.data.size + 1) +\r\n                  ' to ' +\r\n                  (props.data.page * props.data.size + props.data.size >\r\n                  props.data.totalCount\r\n                    ? props.data.totalCount\r\n                    : props.data.page * props.data.size + props.data.size) +\r\n                  ' of ' +\r\n                  props.data.totalCount +\r\n                  ' entries'}\r\n              </div>\r\n              {props.data.totalCount > props.data.size && (\r\n                <div className=\"d-ib fr\">\r\n                  {props.data.page > 0 && (\r\n                    <GrPrevious\r\n                      size=\"1.3em\"\r\n                      title=\"Previous\"\r\n                      className=\"pointer\"\r\n                      onClick={() => {\r\n                        props.onPageChange(\r\n                          props.data.page - 1,\r\n                          props.data.size\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {props.data.totalCount / props.data.size > 0 &&\r\n                    [\r\n                      ...Array(\r\n                        Math.ceil(props.data.totalCount / props.data.size)\r\n                      )\r\n                    ].map((d, i) => {\r\n                      return (\r\n                        <span\r\n                          key={'dt-page-' + i}\r\n                          className={\r\n                            'pL-5 pR-5 mL-3 mR-3 pointer' +\r\n                            (i === props.data.page\r\n                              ? ' bgc-blue c-white'\r\n                              : '')\r\n                          }\r\n                          onClick={() => {\r\n                            props.onPageChange(i, props.data.size);\r\n                          }}\r\n                        >\r\n                          {i + 1}\r\n                        </span>\r\n                      );\r\n                    })}\r\n                  {props.data.page <\r\n                    Math.ceil(props.data.totalCount / props.data.size) - 1 && (\r\n                    <GrNext\r\n                      size=\"1.3em\"\r\n                      title=\"Next\"\r\n                      className=\"pointer\"\r\n                      onClick={() => {\r\n                        props.onPageChange(\r\n                          props.data.page + 1,\r\n                          props.data.size\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      )}\r\n    </table>\r\n  );\r\n};","import React from 'react';\r\nimport { GrPrevious, GrNext } from 'react-icons/gr';\r\n\r\ninterface IProps {\r\n  keyName: string,\r\n  columns: Array<any>,\r\n  data: {\r\n    data: Array<any>,\r\n    page: number,\r\n    size: number,\r\n    totalCount: number\r\n  }\r\n  className: string,\r\n  onPageChange: (page: number, size: number) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <div className=\"table\">\r\n      {props.data.data && props.data.data.length > 0 && (\r\n        <div style={{borderBottom: '1px solid #ccc', borderTop: '1px solid #ccc', marginBottom: '10px', padding: '10px 0px'}}>\r\n              <div className=\"d-ib\">\r\n                {'Showing ' +\r\n                  (props.data.page * props.data.size + 1) +\r\n                  ' to ' +\r\n                  (props.data.page * props.data.size + props.data.size >\r\n                  props.data.totalCount\r\n                    ? props.data.totalCount\r\n                    : props.data.page * props.data.size + props.data.size) +\r\n                  ' of ' +\r\n                  props.data.totalCount +\r\n                  ' entries'}\r\n              </div>\r\n              {props.data.totalCount > props.data.size && (\r\n                <div className=\"d-ib fr\">\r\n                  {props.data.page > 0 && (\r\n                    <GrPrevious\r\n                      size=\"1.3em\"\r\n                      title=\"Previous\"\r\n                      className=\"pointer\"\r\n                      onClick={() => {\r\n                        props.onPageChange(\r\n                          props.data.page - 1,\r\n                          props.data.size\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {props.data.totalCount / props.data.size > 0 &&\r\n                    [\r\n                      ...Array(\r\n                        Math.ceil(props.data.totalCount / props.data.size)\r\n                      )\r\n                    ].map((d, i) => {\r\n                      return (\r\n                        <span\r\n                          key={'dt-page-' + i}\r\n                          className={\r\n                            'pL-5 pR-5 mL-3 mR-3 pointer' +\r\n                            (i === props.data.page\r\n                              ? ' bgc-blue c-white'\r\n                              : '')\r\n                          }\r\n                          onClick={() => {\r\n                            props.onPageChange(i, props.data.size);\r\n                          }}\r\n                        >\r\n                          {i + 1}\r\n                        </span>\r\n                      );\r\n                    })}\r\n                  {props.data.page <\r\n                    Math.ceil(props.data.totalCount / props.data.size) - 1 && (\r\n                    <GrNext\r\n                      size=\"1.3em\"\r\n                      title=\"Next\"\r\n                      className=\"pointer\"\r\n                      onClick={() => {\r\n                        props.onPageChange(\r\n                          props.data.page + 1,\r\n                          props.data.size\r\n                        );\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n        </div>\r\n      )}\r\n      <div>\r\n        {props.data.data && props.data.data.length > 0 ? (\r\n          props.data.data.map((row, i) => {\r\n            return (\r\n              <ul key={i + props.keyName} className='card'>\r\n                {props.columns &&\r\n                  props.columns.map(column => {\r\n                    return (\r\n                      <li\r\n                        key={i + 'td' + (column.key ? column.key : column.name)}\r\n                        className=''\r\n                      >\r\n                        {column.custom ? column.custom(row)\r\n                         :\r\n                        <div>\r\n                        <label className='bold mr10'>{column.name + ':'}</label>\r\n                         <span>{row[column.key]}</span>\r\n                         </div>\r\n                         }\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>\r\n            <div>No data found!!!</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { searchQuote, search } from '../store/actions/historical-data';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    historicalDataList: state.HistoricalDataList,\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    searchQuote: (text: string, callback: (result: Array<string>) => void) => dispatch(searchQuote(text, callback)),\r\n    search: (quote: string, page: number, size: number, callback: (result: boolean) => void) => dispatch(search(quote, page, size, callback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { AiFillIdcard } from 'react-icons/ai';\r\nimport { BsGrid3X3 } from 'react-icons/bs';\r\nimport { View, Text, TextInput } from '../common/elements';\r\nimport { IHistoricalDataList } from '../../models/store/historical-data-list';\r\nimport Spinner from '../common/spinner';\r\nimport DataTable from '../common/data-table';\r\nimport Card from '../common/card';\r\n// import Button from '../common/button';\r\n\r\ninterface IProps {\r\n  historicalDataList: IHistoricalDataList,\r\n  searchQuote: (text: string, callback: (result: Array<string>) => void) => void,\r\n  search: (quote: string, page: number, size: number, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasDropDown, setHasDropDown] = useState(false);\r\n  const [dropDownData, setDropDownData] = useState([] as Array<string>);\r\n  const [viewType, setViewType] = useState('GRID');\r\n\r\n  const getColumns = () => {\r\n    return [\r\n      {\r\n        name: 'Date',\r\n        custom: (row: any) => {\r\n          return (new Date(row.date).toLocaleDateString());\r\n        }\r\n      },\r\n      {\r\n        name: 'Open',\r\n        key: 'open'\r\n      },\r\n      {\r\n        name: 'High',\r\n        key: 'high'\r\n      },\r\n      {\r\n        name: 'Low',\r\n        key: 'low'\r\n      },\r\n      {\r\n        name: 'Close',\r\n        key: 'close'\r\n      },\r\n      {\r\n        name: 'Adj Close',\r\n        key: 'adjClose'\r\n      },\r\n      {\r\n        name: 'Volume',\r\n        key: 'volume'\r\n      }\r\n    ];\r\n  };\r\n\r\n    return(\r\n    <View className='d100'>\r\n      <View className='dflex' style={{marginBottom: '25px'}}>\r\n        <View className='d50 mr10 pr'>\r\n          <TextInput type='text' className='d100' placeholder='Search Historical Data' value={searchText + ''}\r\n          onFocus={() => setHasDropDown(true)}\r\n          onChange={(e: any) => {\r\n            setSearchText(e.target.value);\r\n            props.searchQuote(e.target.value, (result: Array<string>) => {\r\n              setDropDownData(result);\r\n            });\r\n            }} style={{padding: '3px 5px'}} />\r\n          {hasDropDown &&\r\n          <View className='ddl pa d100' style={{zIndex: 1}}>\r\n            <Text title='Close' className='pa bold tar pointer' style={{color: '#FF0000', right: 0, top: '-7px'}} onClick={() => setHasDropDown(false)}>X</Text>\r\n            {dropDownData.length > 0 ?\r\n            dropDownData.map((d: string, i) => {\r\n            return(\r\n              <View key={'quote' + i} className='ddli pointer' style={{}} onClick={() => {\r\n                setHasDropDown(false);\r\n                setSearchText(d);\r\n                setIsLoading(true);\r\n                props.search(d, 0, 20, (result: boolean) => {\r\n                  setIsLoading(false);\r\n                });\r\n              }}>{d}</View>\r\n            )\r\n            })\r\n            :\r\n            <Text style={{padding: '5px'}}>No data matches!!!</Text>\r\n          }\r\n          </View>\r\n          }\r\n        </View>\r\n        {/* <Button title='Search' onPress={() => {\r\n          setIsLoading(true);\r\n          props.search(searchText, (result: boolean) => {\r\n            setIsLoading(false);\r\n          });\r\n        }} /> */}\r\n        <BsGrid3X3\r\n        size=\"1.5em\"\r\n        title=\"Grid\"\r\n        className=\"pointer mr10\"\r\n        style={viewType === 'GRID' ? {marginTop: '4px', color: '#0078d7'} : {marginTop: '4px'}}\r\n        onClick={() => {\r\n          setViewType('GRID');\r\n        }}/>\r\n        <AiFillIdcard\r\n        size=\"2em\"\r\n        title=\"Card\"\r\n        className=\"pointer\"\r\n        style={viewType === 'CARD' ? {color: '#0078d7'} : {}}\r\n        onClick={() => {\r\n          setViewType('CARD');\r\n        }}/>\r\n      </View>\r\n      {(props.historicalDataList && props.historicalDataList.isUpToDate && props.historicalDataList.data) &&\r\n      <View>\r\n        {viewType === 'GRID' ?\r\n      <DataTable\r\n      keyName=\"historical-data\"\r\n      className=''\r\n      columns={getColumns()}\r\n      data={props.historicalDataList.data}\r\n      onPageChange={(page: number, size: number) => {\r\n        setIsLoading(true);\r\n        props.search(searchText, page, size, (result: boolean) => {\r\n          setIsLoading(false);\r\n        });\r\n      }}\r\n    />\r\n      :\r\n      <Card\r\n      keyName=\"historical-data\"\r\n      className=''\r\n      columns={getColumns()}\r\n      data={props.historicalDataList.data}\r\n      onPageChange={(page: number, size: number) => {\r\n        setIsLoading(true);\r\n        props.search(searchText, page, size, (result: boolean) => {\r\n          setIsLoading(false);\r\n        });\r\n      }} />\r\n        }\r\n      </View>\r\n      }\r\n      <Spinner visible={isLoading} text={\"Loading...\"} />\r\n    </View>\r\n    )\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\nexport default () => {\r\n    return (\r\n        <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n            <Text>Page not found!!!</Text>\r\n        </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View } from '../common/elements';\r\nimport Header from './header';\r\nimport Footer from './footer';\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport NotFound from '../../components/not-found';\r\n\r\nexport default () => {\r\n  return (\r\n    <View className=\"container\">\r\n      <Header/>\r\n      <View className=\"content\">\r\n        <Switch>\r\n          <Route path={'/'} exact component={CDashboard} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </View>\r\n      <Footer />\r\n    </View>\r\n  );\r\n}","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport Page from '../components/app-container';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n});\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport { Home } from '../containers/home';\n\nexport default () => {\n  return(\n    <HashRouter>\n      <Home />\n    </HashRouter>\n  )\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/app-store';\nimport { AppContainer } from './containers/app-container';\nimport './css/bootstrap.min.css';\nimport './css/common.scss';\n\nexport default () => {\n  return(\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>      \n  )\n};"],"sourceRoot":""}